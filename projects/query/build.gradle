buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.antlr:antlr4-runtime:4.13.1'
    }
}

plugins {
    id 'java-library'
    id 'antlr'
}

description "SQL query definitions"

// FIXME: fix the antlr plugin's dependency issue
configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
    implementation {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

dependencies {
    api "hu.webarticum.miniconnect.api:lang:${miniConnectApiVersion}"
    
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.antlr:antlr4-runtime:4.13.1'
    
    antlr 'org.antlr:antlr4:4.13.1'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.7.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

afterEvaluate {
    sourcesJar.dependsOn generateGrammarSource
}

// FIXME: fix the antlr plugin's dependency issue
publishing {
    publications {
        mavenJava(MavenPublication) {
            pom.withXml {
                Node pomNode = asNode()
                pomNode.dependencies.'*'.findAll() {
                    it.groupId.text() == 'org.antlr' && it.artifactId.text() == 'antlr4'
                }.each() {
                    it.parent().remove(it)
                }
            }
        }
    }
}
